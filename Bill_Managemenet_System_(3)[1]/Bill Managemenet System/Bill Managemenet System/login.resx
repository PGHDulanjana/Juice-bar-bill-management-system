<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LIVXoYUkl5/kfZSvT//Z
</value>
  </data>
</root>